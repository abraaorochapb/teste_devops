name: Workflow

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.28.0' 
      id: install

    - name: Configure Docker Hub credentials
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set image tag from commit SHA
      run: echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

    - name: Build Docker image
      run: |
        docker build -t abraaorochapb/teste-abraao:${{ env.IMAGE_TAG }} .

    - name: Scan Docker image with Trivy
      uses: aquasecurity/trivy-action@v0.24.0
      with:
        image-ref: abraaorochapb/teste-abraao:${{ env.IMAGE_TAG }}
        format: table
        severity: CRITICAL,HIGH
        exit-code: 0
        ignore-unfixed: true

    - name: Push Docker image to Docker Hub
      run: docker push abraaorochapb/teste-abraao:${{ env.IMAGE_TAG }}


    ## O restante do workflow realiza o deploy no cluster EKS da maneira mais simples poss√≠vel. 
    
    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v2
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1

    # - name: Update kube config
    #   run: aws eks update-kubeconfig --name nome-do-cluster --region region
    
    # - name: Deploy to EKS
    #   run: |
    #     kubectl apply -f ./k8s/service.yaml
    #     kubectl apply -f ./k8s/deployment.yaml
    #     kubectl set image deployment/atividade-abraao \
    #       atividade-abraao=abraaorochapb/teste-abraao:${IMAGE_TAG}
    #     kubectl rollout status deployment/atividade-abraao

    # - name: Deploy Ingress
    #   run: |
    #     kubectl apply -f ./k8s/ingress.yaml
